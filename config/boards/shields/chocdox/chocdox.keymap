/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

/ {
        keymap {
                compatible = "zmk,keymap";

                default_layer {
// -----------------------------------------------------------------------------------------
// |  Q  |  W  |  E  |  R  |  T   |       |  Y  |  U   |  I  |  O  |  P  |
// |  A  |  S  |  D  |  F  |  G   |       |  H  |  J   |  K  |  L  |  '  |
// |  Z  |  X  |  C  |  V  |  B   |       |  N  |  M   |  ,  |  .  |  /  |
//       | LENC| DEL | RET | NUM  |       | NAV | SPACE| BSPC|RENC |
                        bindings = <
   &kp Q       &kp W     &kp E   &kp R   &kp T        &kp Y &kp U     &kp I     &kp O    &kp P
   &mt LSHFT A &kp S     &kp D   &kp F   &kp G        &kp H &kp J     &kp K     &kp L    &kp APOS
   &kp Z       &kp X     &kp C   &kp V   &kp B        &kp N &kp M     &kp COMMA &kp DOT  &kp FSLH
               &none     &kp DEL &kp RET &to 1        &to 2 &kp SPACE &kp BSPC  &none
                        >;

                        sensor-bindings = <&inc_dec_kp LEFT RIGHT &inc_dec_kp UP DOWN>; //Left enc does left and right arrow, right encoder does up and down arrow. If one doesn't work it's because slave side encoders are nonfunctional as of 3/29/21
                };
                num_layer {
// -----------------------------------------------------------------------------------------
// |  1  |  2  |  3  |  4  |  5  |       |  6  |  7  |  8  |  9  |  0 |
// |Shift|  +  |  -  |  *  |  /  |       |  (  |  )  |  [  |  ]  |  ; |
// |  =  | ~/` |  _  |  \  | CAPS|       |     |     |  ,  |  .  |Shft|
//       | LENC| DEL | RET | NAV |       | ALP |SPACE| BSPC|RENC |
                        bindings = <
   &bt N1    &kp N2   &kp N3       &kp N4           &kp N5           &kp N6   &kp N7    &kp N8    &kp N9   &kp N0
   &bt LSHFT &kp PLUS &kp KP_MINUS &kp KP_MULTIPLY  &kp FSLH         &kp LPAR &kp RPAR  &kp LBKT  &kp RBKT &kp SEMI
   &bt EQUAL &trans   &kp UNDER    &kp BSLH         &kp CAPS         &none    &none     &kp COMMA &kp DOT  &kp RSHFT
             &none    &kp DEL      &kp RET          &to 2            &to 0    &kp SPACE &kp BSPC  &none
                        >;

                        sensor-bindings = <&inc_dec_kp LEFT RIGHT &inc_dec_kp UP DOWN>; //Left enc does left and right arrow, right encoder does up and down arrow. If one doesn't work it's because slave side encoders are nonfunctional as of 3/29/21
                };

                sym_layer {
// -----------------------------------------------------------------------------------------
// |  Z  |  X  | mUP |  C  |  V  |       |  F  | lClk|  Up |Rclck|Reset|
// | Ctrl|mLeft|mDown|mRght|  F6 |       | F7  | Left|Down |Right|Shift|
// |  F1 | F2  | F3  | F4  |  F5 |       | F8  | F9  | F10 | F11 | F12 |
//       | LENC| DEL | RET | ALP |       | NUM |SPACE| BSPC|RENC |
                        bindings = <
   &kp Z      &kp X    &none   &kp C   &kp V         &kp F  &none     &kp UP   &none     &none
   &kp LCTRL  &none    &none   &none   &kp F6        &kp F7 &kp LEFT  &kp DOWN &kp RIGHT &kp PIPE
   &kp F1     &kp F2   &kp F3  &kp F4  &kp F5        &kp F8 &kp F9    &kp F10  &kp F11   &kp F12
              &none    &kp DEL &kp RET &to 0         &to 1  &kp SPACE &kp BSPC &none
                        >;
                };

// This layer is unreachable until "tri layer state" is sorted out.
// Leaving it here for completeness.
                num_layer {
// -----------------------------------------------------------------------------------------
// |     |     |     |     |     |   |  A  |  7  |  8  |  9  |  D  |
// |     |     |     |     |     |   |  B  |  4  |  5  |  6  |  E  |
// |     |     |     |     |     |   |  C  |  1  |  2  |  3  |  F  |
//             |     |     |     |   |  0  |  .  |     |
                        bindings = <
   &trans &trans &trans &trans &trans    &kp A  &kp N7  &kp N8 &kp N9 &kp D
   &trans &trans &trans &trans &trans    &kp B  &kp N4  &kp N5 &kp N6 &kp E
   &trans &trans &trans &trans &trans    &kp C  &kp N1  &kp N2 &kp N3 &kp F
                 &trans &trans &trans    &kp N0 &kp DOT &trans
                        >;
                };
        };
};
